@import "mixins/mixins";
@import "common/var";

@keyframes y-drawer-fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@mixin drawer-animation($direction) {

  @keyframes #{$direction}-drawer-in {
    0% {

      @if $direction == ltr {
        transform: translate(-100%, 0px);
      }

      @if $direction == rtl {
        transform: translate(100%, 0px);
      }

      @if $direction == ttb {
        transform: translate(0px, -100%);
      }

      @if $direction == btt {
        transform: translate(0px, 100%);
      }
    }

    100% {
      @if $direction == ltr {
        transform: translate(0px, 0px);
      }

      @if $direction == rtl {
        transform: translate(0px, 0px);
      }

      @if $direction == ttb {
        transform: translate(0px, 0px);
      }

      @if $direction == btt {
        transform: translate(0px, 0px);
      }
    }
  }

  @keyframes #{$direction}-drawer-out {
    0% {
      @if $direction == ltr {
        transform: translate(0px, 0px);
      }

      @if $direction == rtl {
        transform: translate(0px, 0px);;
      }

      @if $direction == ttb {
        transform: translate(0px, 0px);
      }

      @if $direction == btt {
        transform: translate(0px, 0);
      }
    }

    100% {
      @if $direction == ltr {
        transform: translate(-100%, 0px);
      }

      @if $direction == rtl {
        transform: translate(100%, 0px);
      }

      @if $direction == ttb {
        transform: translate(0px, -100%);
      }

      @if $direction == btt {
        transform: translate(0px, 100%);
      }
    }
  }
}

@mixin animation-in($direction) {
  .y-drawer__open &.#{$direction} {
    animation: #{$direction}-drawer-in .3s 1ms;
  }
}

@mixin animation-out($direction) {
  &.#{$direction} {
    animation: #{$direction}-drawer-out .3s;
  }
}

@include drawer-animation(rtl);
@include drawer-animation(ltr);
@include drawer-animation(ttb);
@include drawer-animation(btt);

$directions: rtl, ltr, ttb, btt;

@include b(drawer) {
  position: absolute;
  box-sizing: border-box;
  background-color: $--dialog-background-color;
  // display: flex;
  // flex-direction: column;
  box-shadow: $--box-shadow-dark;
  overflow: hidden;
  outline: 0;

  @each $direction in $directions {
    @include animation-out($direction);
    @include animation-in($direction);
  }

  &__wrapper {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    margin: 0;

    .y-scrollbar .y-scrollbar__wrap {
      overflow-x: hidden;
    }
  }

  &__header {
    align-items: center;
    color: $--nc1;
    display: flex;
    background-color: $--nc12;
    padding: 0 24px;
  }

  &__title {
    margin: 0;
    flex: 1;
    line-height: inherit;
    font-size: 1rem;
  }

  @include e(operation) {
    margin-left: auto;
    display: inline-flex;
    align-items: center;
    color: $--nc5;
    font-size: 20px;

    .y-divider--vertical {
      height: 18px;
    }
  }

  &__close {
    cursor: pointer;
    font-size: $--font-size-extra-large;
  }

  &__body {
    // flex: 1;
    // overflow: auto;
    & > * {
      box-sizing: border-box;
    }
  }

  @include e(footer) {
    // padding: $--dialog-padding-primary;
    // padding-top: 10px;
    height: 66px;
    padding: 0 24px;
    // text-align: right;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    &-button {
      font-size: 0;
      margin-left: auto;
    }
  }

  &.ltr, &.rtl {
    height: 100%;
    top: 0;
    bottom: 0;
  }

  &.ttb, &.btt {
    width: 100%;
    left: 0;
    right: 0;
  }

  &.ltr {
    left: 0;
  }

  &.rtl {
    right: 0;
  }

  &.ttb {
    top: 0;
  }

  &.btt {
    bottom: 0;
  }
}

.y-drawer__container {
  position: relative;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
}

.y-drawer-fade-enter-active {
  animation: y-drawer-fade-in .3s;
}

.y-drawer-fade-leave-active {
  animation: y-drawer-fade-in .3s reverse;
}
